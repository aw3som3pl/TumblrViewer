// Generated by Dagger (https://google.github.io/dagger).
package com.jnsoftware.tumblr.di.module;

import com.jnsoftware.tumblr.data.prefs.PreferencesHelper;
import com.jnsoftware.tumblr.data.prefs.PreferencesManager;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import javax.inject.Provider;

public final class ApplicationModule_ProvidePreferencesHelperFactory
    implements Factory<PreferencesHelper> {
  private final ApplicationModule module;

  private final Provider<PreferencesManager> preferencesManagerProvider;

  public ApplicationModule_ProvidePreferencesHelperFactory(
      ApplicationModule module, Provider<PreferencesManager> preferencesManagerProvider) {
    this.module = module;
    this.preferencesManagerProvider = preferencesManagerProvider;
  }

  @Override
  public PreferencesHelper get() {
    return Preconditions.checkNotNull(
        module.providePreferencesHelper(preferencesManagerProvider.get()),
        "Cannot return null from a non-@Nullable @Provides method");
  }

  public static ApplicationModule_ProvidePreferencesHelperFactory create(
      ApplicationModule module, Provider<PreferencesManager> preferencesManagerProvider) {
    return new ApplicationModule_ProvidePreferencesHelperFactory(
        module, preferencesManagerProvider);
  }

  public static PreferencesHelper proxyProvidePreferencesHelper(
      ApplicationModule instance, PreferencesManager preferencesManager) {
    return Preconditions.checkNotNull(
        instance.providePreferencesHelper(preferencesManager),
        "Cannot return null from a non-@Nullable @Provides method");
  }
}
