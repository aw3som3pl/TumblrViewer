// Generated by Dagger (https://google.github.io/dagger).
package com.jnsoftware.tumblr.dataInterface.module;

import com.jnsoftware.tumblr.data.network.NetworkService;
import dagger.internal.Factory;
import dagger.internal.Preconditions;

public final class ApplicationModule_ProvideApiServiceFactory implements Factory<NetworkService> {
  private final ApplicationModule module;

  public ApplicationModule_ProvideApiServiceFactory(ApplicationModule module) {
    this.module = module;
  }

  @Override
  public NetworkService get() {
    return Preconditions.checkNotNull(
        module.provideApiService(), "Cannot return null from a non-@Nullable @Provides method");
  }

  public static ApplicationModule_ProvideApiServiceFactory create(ApplicationModule module) {
    return new ApplicationModule_ProvideApiServiceFactory(module);
  }

  public static NetworkService proxyProvideApiService(ApplicationModule instance) {
    return Preconditions.checkNotNull(
        instance.provideApiService(), "Cannot return null from a non-@Nullable @Provides method");
  }
}
