// Generated by Dagger (https://google.github.io/dagger).
package com.jnsoftware.tumblr.di.module;

import dagger.internal.Factory;
import dagger.internal.Preconditions;
import okhttp3.OkHttpClient;

public final class ApplicationModule_ProvideClientFactory implements Factory<OkHttpClient> {
  private final ApplicationModule module;

  public ApplicationModule_ProvideClientFactory(ApplicationModule module) {
    this.module = module;
  }

  @Override
  public OkHttpClient get() {
    return Preconditions.checkNotNull(
        module.provideClient(), "Cannot return null from a non-@Nullable @Provides method");
  }

  public static ApplicationModule_ProvideClientFactory create(ApplicationModule module) {
    return new ApplicationModule_ProvideClientFactory(module);
  }

  public static OkHttpClient proxyProvideClient(ApplicationModule instance) {
    return Preconditions.checkNotNull(
        instance.provideClient(), "Cannot return null from a non-@Nullable @Provides method");
  }
}
