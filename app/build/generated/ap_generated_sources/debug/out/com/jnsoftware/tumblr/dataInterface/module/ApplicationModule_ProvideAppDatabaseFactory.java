// Generated by Dagger (https://google.github.io/dagger).
package com.jnsoftware.tumblr.dataInterface.module;

import com.jnsoftware.tumblr.data.db.AppDatabase;
import dagger.internal.Factory;
import dagger.internal.Preconditions;

public final class ApplicationModule_ProvideAppDatabaseFactory implements Factory<AppDatabase> {
  private final ApplicationModule module;

  public ApplicationModule_ProvideAppDatabaseFactory(ApplicationModule module) {
    this.module = module;
  }

  @Override
  public AppDatabase get() {
    return Preconditions.checkNotNull(
        module.provideAppDatabase(), "Cannot return null from a non-@Nullable @Provides method");
  }

  public static ApplicationModule_ProvideAppDatabaseFactory create(ApplicationModule module) {
    return new ApplicationModule_ProvideAppDatabaseFactory(module);
  }

  public static AppDatabase proxyProvideAppDatabase(ApplicationModule instance) {
    return Preconditions.checkNotNull(
        instance.provideAppDatabase(), "Cannot return null from a non-@Nullable @Provides method");
  }
}
